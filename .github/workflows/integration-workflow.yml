on:
  push:
    branches:
    - master
    - 'cherry-pick/**'
  pull_request:
  workflow_dispatch:
  merge_group:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}-${{github.ref != 'refs/heads/master' || github.run_number}}
  cancel-in-progress: ${{startsWith(github.ref, 'refs/pull/')}}

env:
  node-version: '18.x'

name: 'Integration'

jobs:
  build:
    name: 'Build artifacts'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: 'Use Node.js ${{ env.node-version }}'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.node-version }}
    - name: 'Build bundle & plugins'
      run: |
        node --version
        node ./scripts/run-yarn.js build:pnp:hook
        node ./scripts/run-yarn.js build:zip:worker
        node ./scripts/run-yarn.js build:cli
        mv ./packages/yarnpkg-cli/bundles/yarn.js ./packages/yarnpkg-cli/bundles/yarn-min.js
        node ./scripts/run-yarn.js build:cli --no-minify
      shell: bash
    - uses: actions/upload-artifact@v4
      with:
        name: yarn-artifacts
        path: |
          ./packages/*/bundles
          ./packages/yarnpkg-pnp/sources/hook.js
          ./packages/yarnpkg-core/sources/worker-zip/index.js

  big-endian:
    strategy:
      fail-fast: false
      matrix:
        shard: ['1/4', '2/4', '3/4', '4/4']

    name: 'Big-endian debian w/ Node.js latest (${{matrix.shard}})'
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    needs: build

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: yarn-artifacts
        path: packages

    - name: 'Enable execution of multi-arch containers'
      run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset --persistent yes
      shell: bash

    - name: 'Run the integration tests'
      run: |
        docker run --rm --volume "$PWD:/berry" --env GITHUB_ACTIONS --env YARN_IGNORE_PATH=1 --workdir /berry --platform linux/s390x node /bin/bash -c 'node ./packages/yarnpkg-cli/bundles/yarn.js test:integration --maxWorkers=100% --shard=${{matrix.shard}}'
      shell: bash

    - name: 'Run the unit tests'
      run: |
        docker run --rm --volume "$PWD:/berry" --env GITHUB_ACTIONS --env YARN_IGNORE_PATH=1 --workdir /berry --platform linux/s390x node /bin/bash -c 'node ./packages/yarnpkg-cli/bundles/yarn.js test:unit --maxWorkers=100% --shard=${{matrix.shard}}'
      shell: bash
